{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Big Data Exercises\n",
    "\n",
    "In these exercises we will work on data from a series of global weather monitoring stations used to measure climate trends to examine long-term trends in temperature for your home locality. This data comes from the Global Historical Climatology Network, and is the actual raw data provided by NOAA. The only changes I have made to this data are a few small formatting changes to help meet the learning goals of this exercise. \n",
    "\n",
    "To do these excercises, first please download the data for this exercise [from here](). Note this is a VERY big file (this is a big-data exercise, after all), so be patient. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**(1)** The data we'll be working with can be found in the file `ghcnd_daily.tar.gz`. Unpack this file to begin (it will be about 30gb), then open the `readme.txt` to read about the format of this file. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**(2)** First, read in the first 20 lines or so of the data to get a sense of how it is organized. Note that as explained, this file is a \"fixed-width\" formatted file, meaning that rather than putting commas between columns, each column takes up a specified number of characters in every row. Google \"reading fixed-width data in pandas\" to figure out how to work with this kind of data. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**(3)** Rather than work with the entire database, each pair should pick two weather stations two examine. Using the ancillary files in the project, figure out what weather stations you wish to study. I suggest each person pick a weather station close to where they grew up. \n",
    "\n",
    "When picking a weather station, however, select one with the `HCN` flag in the `ghcnd-stations.txt` file. Those are members of the \"Historic Climatological Network\" and have the longest time series and always include temperature data. \n",
    "\n",
    "In addition, also plan on pulling the data for \"USC00050848\" (a weather station from near my home!) so you can generate results that we can all compare (to check for accuracy). "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**(4)** Once you've picked the stations you wish to study, write code to read in all the climate data and keep only the observations for the wealth stations you've selected to focus on. The two outcome we care about are maximium temp and minimum temp. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**(5)** Check the values of your quality flags and decide whether you should keep all observations in your data. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**(6)** Reshape your data so max temp is one column and min temp is another (this isn't *stricty* necessary, but is good practice!)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**(7)** Now for each weather station, generate a separate plot of the daily temperatures over time. You should end up with a plot that looks something like this (though you'll be plotting daily max temps and daily min temps):\n",
    "\n",
    "![climate_plot_example](../images/climate_plot_example.jpg)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Want More Practice?\n",
    "\n",
    "Let's compare trends across countries!\n",
    "\n",
    "**(1)** Pick three countries and gather all the temperature reports for those countries. \n",
    "\n",
    "**(2)** For each day, average the max tempurature across all weather statements in each country to get a lower-variance estimate of overall temperature for each county. \n",
    "\n",
    "**(3)** Plot daily temperatures seperately for the three countries, and fit a linear model to see which has the greatest increases in temperature. "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
